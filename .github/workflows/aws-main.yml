on:
  push:
    branches: [ master ]
    

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_S3_REGION }}

    - name: build
      run: ./gradlew build -x test
      env:
        PRD_WH_DATASOURCE_URL: ${{ secrets.PRD_WH_DATASOURCE_URL }}
        TEST_WH_DATASOURCE_URL: ${{ secrets.TEST_WH_DATASOURCE_URL }}
        WH_DATASOURCE_USERNAME: ${{ secrets.WH_DATASOURCE_USERNAME }}
        WH_DATASOURCE_PASSWORD: ${{ secrets.WH_DATASOURCE_PASSWORD }}
        AWS_ACCESS_KEY_ID: ${{ secrets.BANCHANGO_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.BANCHANGO_AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET: ${{ secrets.BANCHANGO_AWS_S3_BUCKET }}
        AWS_S3_REGION: ${{ secrets.BANCHANGO_AWS_S3_REGION }}
        WH_DEFAULT_IMAGE_URL: ${{ secrets.WH_DEFAULT_IMAGE_URL }}
        AWS_EMAIL_ACCESS_KEY: ${{ secrets.AWS_EMAIL_ACCESS_KEY }}
        AWS_EMAIL_SECRET_ACCESS_KEY: ${{ secrets.AWS_EMAIL_SECRET_ACCESS_KEY }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ secrets.PRD_AWS_ECR_REPOSITORY }}
        ECR_REPOSITORY: banchango_server
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
