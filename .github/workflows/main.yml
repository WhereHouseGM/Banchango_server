# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: build and upload to s3
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      # Runs a set of commands using the runners shell
      - name: build
        run: ./gradlew build
    
      - name: compress files for deploy
        run: zip -r wherehouse-backend.zip build/libs appspec.yml scripts
      
      - name: upload to s3
        run: aws s3 cp wherehouse-backend.zip s3://${{ secrets.AWS_DEPLOY_BUCKET }}

  deploy:
    needs: build
    name: deploy to ec2
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      - name: deploy
        run: aws deploy create-deployment --application-name wherehouse-backend --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name deploy-wherehouse-backend --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},bundleType=zip,key=wherehouse-backend.zip --region ${{ secrets.AWS_S3_REGION }} --file-exists-behavior OVERWRITE
