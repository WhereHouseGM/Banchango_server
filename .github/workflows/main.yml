# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ dev2 ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: build and dockerize and upload to ecr
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      # Runs a set of commands using the runners shell
      - name: build
        run: ./gradlew build -x test
        env:
          PRD_WH_DATASOURCE_URL: ${{ secrets.PRD_WH_DATASOURCE_URL }}
          TEST_WH_DATASOURCE_URL: ${{ secrets.TEST_WH_DATASOURCE_URL }}
          WH_DATASOURCE_USERNAME: ${{ secrets.WH_DATASOURCE_USERNAME }}
          WH_DATASOURCE_PASSWORD: ${{ secrets.WH_DATASOURCE_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BANCHANGO_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BANCHANGO_AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.BANCHANGO_AWS_S3_BUCKET }}
          AWS_S3_REGION: ${{ secrets.BANCHANGO_AWS_S3_REGION }}
          WH_DEFAULT_IMAGE_URL: ${{ secrets.WH_DEFAULT_IMAGE_URL }}
          AWS_EMAIL_ACCESS_KEY: ${{ secrets.AWS_EMAIL_ACCESS_KEY }}
          AWS_EMAIL_SECRET_ACCESS_KEY: ${{ secrets.AWS_EMAIL_SECRET_ACCESS_KEY }}

      - name: authorize docker client
        run: aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrests.AWS_ECR_REPOSITORY }} 

      - name: dockerize
        run: docker build -t banchango_server
      
      - name: tag image
        run: docker tag banchango_server:latest ${{ secrets.AWS_ECR_REPOSITORY }}/banchango_server:latest 

      - name: push image to ecr
        run: docker push ${{ AWS_ECR_REPOSITORY }}/banchango_server:latest
